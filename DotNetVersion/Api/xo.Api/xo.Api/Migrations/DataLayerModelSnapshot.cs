// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xo.Api.Data;

#nullable disable

namespace xo.Api.Migrations
{
    [DbContext(typeof(DataLayer))]
    partial class DataLayerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("xo.Api.Entities.Game", b =>
                {
                    b.Property<int>("Game_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Game_Id"));

                    b.Property<string>("Board")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentTurn_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsGameOver")
                        .HasColumnType("bit");

                    b.Property<int>("Player1_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Player2_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Winner_Id")
                        .HasColumnType("int");

                    b.HasKey("Game_Id");

                    b.HasIndex("CurrentTurn_Id");

                    b.HasIndex("Player1_Id");

                    b.HasIndex("Player2_Id");

                    b.HasIndex("Winner_Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("xo.Api.Entities.Player", b =>
                {
                    b.Property<int>("Player_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Player_Id"));

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Player_Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("xo.Api.Entities.Game", b =>
                {
                    b.HasOne("xo.Api.Entities.Player", "CurrentTurn")
                        .WithMany()
                        .HasForeignKey("CurrentTurn_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xo.Api.Entities.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xo.Api.Entities.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2_Id");

                    b.HasOne("xo.Api.Entities.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("Winner_Id");

                    b.Navigation("CurrentTurn");

                    b.Navigation("Player1");

                    b.Navigation("Player2");

                    b.Navigation("Winner");
                });
#pragma warning restore 612, 618
        }
    }
}
